Fun[Int] Int visit;
Int total_cost;
Int steps;

Bool function canTravel (Int from, Int to) {
    (from == 0 and (to == 1 or to == 2)) or
    (from == 1 and (to == 0 or to == 2 or to == 4 or to == 3)) or
    (from == 2 and (to == 0 or to == 1 or to == 4 or to == 5)) or
    (from == 3 and (to == 1 or to == 4)) or
    (from == 4 and (to == 3 or to == 1 or to == 2 or to == 5)) or
    (from == 5 and (to == 1 or to == 2));
}

Int function costTravel (Int from, Int to) {
    if (from == 0 and to == 1) or (from == 1 and to == 0) {6;}
    elif (from == 0 and to == 2) or (from == 2 and to == 0) {7;}
    elif (from == 1 and to == 3) or (from == 3 and to == 1) {4;}
    elif (from == 1 and to == 2) or (from == 2 and to == 1) {1;}
    elif (from == 1 and to == 4) or (from == 4 and to == 1) {3;}
    elif (from == 2 and to == 4) or (from == 4 and to == 2) {2;}
    elif (from == 2 and to == 5) or (from == 5 and to == 2) {1;}
    elif (from == 3 and to == 4) or (from == 4 and to == 3) {5;}
    elif (from == 4 and to == 5) or (from == 5 and to == 4) {3;}
    else {10;}
}

5 <= steps and steps <= 11;

exists(Int i0) {0 <= i0 and i0 <= steps and visit[i0] == 0;}
exists(Int i1) {0 <= i1 and i1 <= steps and visit[i1] == 1;}
exists(Int i2) {0 <= i2 and i2 <= steps and visit[i2] == 2;}
exists(Int i3) {0 <= i3 and i3 <= steps and visit[i3] == 3;}
exists(Int i4) {0 <= i4 and i4 <= steps and visit[i4] == 4;}
exists(Int i5) {0 <= i5 and i5 <= steps and visit[i5] == 5;}

repeat i in range(5){
    if i < 4 {
        canTravel(visit[i], visit[i + 1]);
    }
    elif i < steps {
        canTravel(visit[i], visit[i + 1]) or steps < i + 1;
    }
    else { 5 > 4; }
}

total_cost ==
costTravel(visit[0], visit[1]) +
costTravel(visit[1], visit[2]) +
costTravel(visit[2], visit[3]) +
costTravel(visit[3], visit[4]) +
if steps > 4 {costTravel(visit[4], visit[5]);} else {0;} +
if steps > 5 {costTravel(visit[5], visit[6]);} else {0;} +
if steps > 6 {costTravel(visit[6], visit[7]);} else {0;} +
if steps > 7 {costTravel(visit[7], visit[8]);} else {0;} +
if steps > 8 {costTravel(visit[8], visit[9]);} else {0;} +
if steps > 9 {costTravel(visit[9], visit[10]);} else {0;} +
if steps > 10 {costTravel(visit[10], visit[11]);} else {0;}
;

total_cost < 17;

check;

repeat i in range(6){
    print visit[i];
}
print total_cost;
